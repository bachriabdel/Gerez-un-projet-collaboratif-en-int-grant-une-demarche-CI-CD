name: back

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build and test with Maven
        run: |
          mvn -B package --file pom.xml
          mvn -B test --file pom.xml   
        working-directory: ./back/     

      - name: Generate back report
        uses: actions/upload-artifact@v4.3.3
        with:
          name: Back-report
          path: back/target/site/jacoco/

      - name: Badge with back coverage
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: back/target/site/jacoco/jacoco.csv
          badges-directory: badges/bobapp
          generate-coverage-badge: true
          coverage-badge-filename: backendBadge.svg

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit and push badges
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add badges/bobapp
          if git diff --staged --quiet; then
          echo "No changes to commit"
          else
            git commit -m "Update back-end coverage badges"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    

  quality:
    runs-on: ubuntu-latest
    needs: tests

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download Back Report
      uses: actions/download-artifact@v4
      with:
        name: Back-report
        path: ./back/target/site/jacoco/

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'adopt'   

    - name: Build backend with Maven
      run: cd back && mvn clean install 
      
    - name: SonarCloud Scan 
      uses: sonarSource/sonarcloud-github-action@master
      with:
        args:
          -Dproject.settings=back/sonar-project.properties
          -Dsonar.verbose=true
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deployment:
    runs-on: ubuntu-latest
    needs: quality

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Install dependencies for back-end
      run: |
        cd back
        mvn clean install 
        
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image for back-end
      uses: docker/build-push-action@v2
      with:
        context: ./back
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest  
      
